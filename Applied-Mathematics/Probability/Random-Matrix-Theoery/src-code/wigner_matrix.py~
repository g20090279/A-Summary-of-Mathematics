# Topics: random matrix theory, Wigner Semicircle
# created by Zekai Liang
# July 20, 2022

import sys
import numpy as np
import matplotlib.pyplot as plt

sys.path.insert(0, "C:/Users/liang/Documents/Git-Local/github/KaiLib/KaiLib_python")
from mathbasics import rand_hermitian_matrix as randherm

SI_MATRIX = 500

eigval_all = np.array([])

# Monte-Carlo Simulation
for i in range(10):

    # generate random matrix, each unique element ~ CN(0,1)
    A = 1/np.sqrt(SI_MATRIX)*randherm(SI_MATRIX)

    # calculate eigenvalues
    eigval_all = np.append(eigval_all, np.linalg.eigvalsh(A))

# plot histogram
fig, ax = plt.subplots()
ax.hist(eigval_all, bins=20, density=True, edgecolor="white")
ax.set(xlim=(-3,3.001), xticks=np.arange(-3,3))
plt.xlabel("Eigenvalues")
plt.ylabel("Ratio")
plt.title("Distribution of Eigenvalues of Complex Wigner Matrix ~ CN(0, 1/SIZE)")
plt.grid()

ax2 = ax.twinx()

x = np.arange(-3,3.001,0.001)
print(x)
y = 4 - pow(x,2)
y[y<0] = 0
print(y)
y = 1/(2*np.pi)*np.sqrt(y)

ax2.plot(x,y, color='red')

plt.show()
